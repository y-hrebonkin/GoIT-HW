def flatten(data):
    if not data:  # Перевірка, чи список порожній
        return []

    if isinstance(data[0], list):  # Перевірка, чи перший елемент є списком
        return flatten(data[0]) + flatten(data[1:])  # Рекурсивний виклик для першого елемента та решти списку
    else:
        return [data[0]] + flatten(data[1:])  # Рекурсивний виклик для першого елемента та решти списку


# Ця функція використовує рекурсію для обробки списку. Вона перевіряє різні випадки:

# Якщо список порожній, повертається порожній список.
# Якщо перший елемент списку є списком, рекурсивно викликається функція flatten для першого елемента і для решти списку, і їх результати конкатенуються.
# Якщо перший елемент списку не є списком, перший елемент додається до результату, а потім рекурсивно викликається функція flatten для решти списку.
# Ви можете викликати цю функцію, передавши їй вхідний список:

# python
# Copy code
# nested_list = [1, 2, [3, 4, [5, 6]], 7]
# flattened_list = flatten(nested_list)
# print(flattened_list)
# В результаті ви отримаєте вивід: [1, 2, 3, 4, 5, 6, 7], що є пласкою версією вхідного списку.